{"ast":null,"code":"import _slicedToArray from\"/Applications/mampstack-7.4.8-0/apache2/htdocs/study/react/react-basic/template/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useEffect,useRef,useState,useCallback}from'react';// 리엑트 훅으로 컴포넌트 변경\n// 함수로 사용 할 경우 심플헤빗에 있는 함수들이 반복이 된다\n// 1.의문 : 반복이돼는거면 카운트는 다시 0이 돼어야 하지만 왜 \n// 0이 안될까?\n// 해설: 리엑트 훅 api useState가 카운트의 결과값을 기억 하기 때문이다.\n// 동일하 값을 메모리에 저장한다.\nvar SimpleHabit=function SimpleHabit(props){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var spanRef=useRef();// 한번만 만들고 메모리에 저장해서 사용하는 리엑트 훅api\nvar handleIncrement=function handleIncrement(useCallback){setCount(count+1);};useEffect(function(){console.log(\"mounted & updated! : \".concat(count));},[]);// []사용하면 처음에만 호출 한다.\nreturn/*#__PURE__*/_jsxs(\"li\",{className:\"habit\",children:[/*#__PURE__*/_jsx(\"span\",{ref:spanRef,className:\"habit-name\",children:\"Reding\"}),/*#__PURE__*/_jsx(\"span\",{className:\"habit-count\",children:count}),/*#__PURE__*/_jsx(\"button\",{className:\"habit-button habit-increase\",onClick:handleIncrement,children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus-square\"})})]});};export default SimpleHabit;","map":{"version":3,"sources":["/Applications/mampstack-7.4.8-0/apache2/htdocs/study/react/react-basic/template/src/components/simpleHabit.jsx"],"names":["React","useEffect","useRef","useState","useCallback","SimpleHabit","props","count","setCount","spanRef","handleIncrement","console","log"],"mappings":"0PAAA,MAAOA,CAAAA,KAAP,EAAiBC,SAAjB,CAA4BC,MAA5B,CAAoCC,QAApC,CAA8CC,WAA9C,KAAiE,OAAjE,CACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,eACFH,QAAQ,CAAC,CAAD,CADN,wCACpBI,KADoB,eACdC,QADc,eAE3B,GAAMC,CAAAA,OAAO,CAAGP,MAAM,EAAtB,CACA;AACA,GAAMQ,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAN,WAAW,CAAI,CACnCI,QAAQ,CAACD,KAAK,CAAE,CAAR,CAAR,CACF,CAFF,CAGCN,SAAS,CAAC,UAAI,CACVU,OAAO,CAACC,GAAR,gCAAoCL,KAApC,GACH,CAFQ,CAEP,EAFO,CAAT,CAEK;AACF,mBACI,YAAI,SAAS,CAAC,OAAd,wBACI,aAAM,GAAG,CAAEE,OAAX,CAAoB,SAAS,CAAC,YAA9B,oBADJ,cAEI,aAAM,SAAS,CAAC,aAAhB,UAA+BF,KAA/B,EAFJ,cAII,eACC,SAAS,CAAC,6BADX,CAEC,OAAO,CAAEG,eAFV,uBAIA,UAAG,SAAS,CAAC,oBAAb,EAJA,EAJJ,GADJ,CAaC,CAvBT,CA0BA,cAAeL,CAAAA,WAAf","sourcesContent":["import React, {  useEffect, useRef, useState, useCallback } from 'react';\n// 리엑트 훅으로 컴포넌트 변경\n// 함수로 사용 할 경우 심플헤빗에 있는 함수들이 반복이 된다\n// 1.의문 : 반복이돼는거면 카운트는 다시 0이 돼어야 하지만 왜 \n// 0이 안될까?\n// 해설: 리엑트 훅 api useState가 카운트의 결과값을 기억 하기 때문이다.\n// 동일하 값을 메모리에 저장한다.\n\nconst SimpleHabit = (props) => {\n    const [count,setCount] = useState(0);\n    const spanRef = useRef();\n    // 한번만 만들고 메모리에 저장해서 사용하는 리엑트 훅api\n    const handleIncrement = useCallback => {\n        setCount(count +1);\n     };\n     useEffect(()=>{\n         console.log(`mounted & updated! : ${count}`);\n     },[])// []사용하면 처음에만 호출 한다.\n        return (\n            <li className=\"habit\">\n                <span ref={spanRef} className=\"habit-name\">Reding</span>\n                <span className=\"habit-count\">{count}</span>\n\n                <button\n                 className=\"habit-button habit-increase\"\n                 onClick={handleIncrement}\n                >\n                <i className=\"fas fa-plus-square\"></i>\n                </button>\n            </li>\n            );\n        }   \n    \n\nexport default SimpleHabit;\n"]},"metadata":{},"sourceType":"module"}