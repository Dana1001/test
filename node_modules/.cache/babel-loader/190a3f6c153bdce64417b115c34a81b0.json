{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Applications/mampstack-7.4.8-0/apache2/htdocs/study/react/react-basic/template/src/components/simpleHabit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // 리엑트 훅으로 컴포넌트 변경\n// 함수로 사용 할 경우 심플헤빗에 있는 함수들이 반복이 된다\n// 1.의문 : 반복이돼는거면 카운트는 다시 0이 돼어야 하지만 왜 \n// 0이 안될까?\n// 해설: 리엑트 훅 api useState가 카운트의 결과값을 기억 하기 때문이다.\n// 동일하 값을 메모리에 저장한다.\n\nconst SimpleHabit = props => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const spanRef = /*#__PURE__*/React.createRef();\n\n  const handleIncrement = () => {\n    setCount(count + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"habit\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      ref: spanRef,\n      className: \"habit-name\",\n      children: \"Reding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"habit-count\",\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"habit-button habit-increase\",\n      onClick: handleIncrement,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-plus-square\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SimpleHabit, \"RpyMek13f3iNeQO0Gs9DEYmHKoY=\");\n\n_c = SimpleHabit;\nexport default SimpleHabit; // class SimpleHabit extends Component {\n//     handleIncrement = () => {\n//         this.setState({count:this.state.count +1});\n//     }\n//     render() {\n// }\n// export default SimpleHabit;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleHabit\");","map":{"version":3,"sources":["/Applications/mampstack-7.4.8-0/apache2/htdocs/study/react/react-basic/template/src/components/simpleHabit.jsx"],"names":["React","useState","SimpleHabit","props","count","setCount","spanRef","createRef","handleIncrement"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC,C,CACA;AAEA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAMK,OAAO,gBAAGN,KAAK,CAACO,SAAN,EAAhB;;AACA,QAAMC,eAAe,GAAG,MAAM;AAC1BH,IAAAA,QAAQ,CAACD,KAAK,GAAE,CAAR,CAAR;AACF,GAFF;;AAGI,sBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA,4BACI;AAAM,MAAA,GAAG,EAAEE,OAAX;AAAoB,MAAA,SAAS,EAAC,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,gBAA+BF;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AACC,MAAA,SAAS,EAAC,6BADX;AAEC,MAAA,OAAO,EAAEI,eAFV;AAAA,6BAIA;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaC,CAnBT;;GAAMN,W;;KAAAA,W;AAsBN,eAAeA,WAAf,C,CACA;AAEA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import React, {  useState } from 'react';\n// 리엑트 훅으로 컴포넌트 변경\n\n// 함수로 사용 할 경우 심플헤빗에 있는 함수들이 반복이 된다\n// 1.의문 : 반복이돼는거면 카운트는 다시 0이 돼어야 하지만 왜 \n// 0이 안될까?\n// 해설: 리엑트 훅 api useState가 카운트의 결과값을 기억 하기 때문이다.\n// 동일하 값을 메모리에 저장한다.\n\n\nconst SimpleHabit = (props) => {\n    const [count,setCount] = useState(0);\n    const spanRef = React.createRef();\n    const handleIncrement = () => {\n        setCount(count +1);\n     };\n        return (\n            <li className=\"habit\">\n                <span ref={spanRef} className=\"habit-name\">Reding</span>\n                <span className=\"habit-count\">{count}</span>\n\n                <button\n                 className=\"habit-button habit-increase\"\n                 onClick={handleIncrement}\n                >\n                <i className=\"fas fa-plus-square\"></i>\n                </button>\n            </li>\n            );\n        }   \n    \n\nexport default SimpleHabit;\n// class SimpleHabit extends Component {\n    \n//     handleIncrement = () => {\n//         this.setState({count:this.state.count +1});\n//     }\n//     render() {\n       \n// }\n\n// export default SimpleHabit;"]},"metadata":{},"sourceType":"module"}